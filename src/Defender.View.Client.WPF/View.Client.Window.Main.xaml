<Window x:Class="Defender.View.Client.WPF.WindowMain"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ViewModel="clr-namespace:Defender.ViewModel;assembly=Defender.ViewModel"
        xmlns:local="clr-namespace:Defender.View.Client.WPF"
        mc:Ignorable="d"
        Title="Defender" Height="750" Width="600" Icon="Resources/Defender.ico">
    <Window.DataContext>
        <ViewModel:ViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <ViewModel:BoolToFillConverter x:Key="BoolToFillConverter"/>
        <ViewModel:BoolToCharaConverter x:Key="BoolToCharaConverter"/>
        <ViewModel:StringArrayToString x:Key="StringArrayToString"/>
        <ViewModel:StringArrayToInt x:Key="StringArrayToInt"/>
        <ViewModel:IntToFontWeight x:Key="IntToFontWeight"/>
    </Window.Resources>
    <Grid>
        <StackPanel>
            <StackPanel Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                <StackPanel.Effect>
                    <DropShadowEffect BlurRadius="5" Direction="180" Color="Gray" ShadowDepth="1" Opacity="0.5" RenderingBias="Quality"/>
                </StackPanel.Effect>
                <TextBlock Padding="10,5" FontSize="29.333" Background="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                           Text="Defender"/>
                <Rectangle Height="7" Fill="{Binding Success, IsAsync=True, Converter={StaticResource BoolToFillConverter}}"/>
                <Rectangle Height="1" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                <TextBlock Padding="5,5"
                           Text="Pick the query folder to handback:"/>
                <Grid>
                    <TextBox x:Name="RQFPath" Margin="5,0,42,10" Padding="5"
                             ToolTip="Load Fabric query (.rqf) files from this folder"
                             Text="{Binding Folder, Mode=TwoWay}" KeyDown="RQFPath_KeyDown"/>
                    <Button x:Name="LoadButton" Margin="0,0,5,10" Padding="5,0" HorizontalAlignment="Right" FontFamily="Consolas"
                            Content="..." Click="LoadButton_Click" TouchDown="LoadButton_TouchDown"/>
                </Grid>
                <Rectangle Height="1" Margin="-5,0,-5,0"
                           Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                <Grid Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="-5,0,-5,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="210*"/>
                        <ColumnDefinition Width="86*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel  Grid.Column="0" Margin="5, 10">
                        <Label Padding="5,0" Content="Current Handback Status –"/>
                        <TextBlock x:Name="Gameareas" Padding="25,0"
                                   Text="{Binding Gameareas, Converter={StaticResource StringArrayToString}, StringFormat='{}{0} gameareas loaded', IsAsync=True}"/>
                        <TextBlock x:Name="Languages" Padding="25,0" ToolTip="{Binding Languages, Converter={StaticResource StringArrayToString}, IsAsync=True}"
                                   Text="{Binding Languages, Converter={StaticResource StringArrayToInt}, StringFormat='{}{0} languages loaded', IsAsync=True}"/>
                        <TextBlock x:Name="Status" Padding="25,0" 
                                   Text="{Binding FileList, Converter={StaticResource StringArrayToInt}, StringFormat='found {0} queries, checking now...', IsAsync=True}"/>
                        <Rectangle Height="5"/>
                    </StackPanel>
                    <Button x:Name="SuccessButton" Margin="5" Padding="5,0" Grid.Column="1" BorderThickness="0" FontSize="32" FontWeight="Bold"
                            Foreground="White" Background="{Binding Success, IsAsync=True, Converter={StaticResource BoolToFillConverter}}"
                            Content="{Binding Success, Converter={StaticResource BoolToCharaConverter}, IsAsync=True}" Click="SuccessButton_Click"/>
                </Grid>
                <Rectangle Height="1" Margin="-5,0,-5,0"
                           Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                <TextBlock x:Name="CurrentFile"  Margin="10,0" Padding="0,10,5,10" VerticalAlignment="Bottom" FontWeight="Bold"
                           Text="{Binding CurrentFile, StringFormat='Verifying {0}...'}"/>
                <ProgressBar VerticalAlignment="Bottom" Height="30" Margin="-2,5,-2,0" BorderThickness="0,1" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"
                             Value="{Binding Progress}"/>
                <Rectangle Height="1" Margin="-5,0,-5,0"
                           Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
            </StackPanel>
        </StackPanel>
        <StackPanel VerticalAlignment="Bottom">
            <StackPanel.Effect>
                <DropShadowEffect BlurRadius="5" Direction="90" Color="Gray" ShadowDepth="1" Opacity="0.5" RenderingBias="Quality"/>
            </StackPanel.Effect>
            <Button x:Name="HidePanel" BorderThickness="1,1,1,0" Width="200" Height="24" VerticalAlignment="Bottom" FontSize="18.667"
                    Background="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" Foreground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                    Content="˅" Click="HidePanel_Click" TouchDown="HidePanel_TouchDown"/>
            <Rectangle Height="1" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
            <Grid x:Name="DataPanel" VerticalAlignment="Bottom" Background="{DynamicResource {x:Static SystemColors.AppWorkspaceBrushKey}}" Height="55"
                  MouseDown="DataPanel_MouseDown" MouseUp="DataPanel_MouseUp" TouchDown="DataPanel_TouchDown" TouchUp="DataPanel_TouchUp">
                <Label Margin="20,0" Padding="0,5,0,0" VerticalAlignment="Top"
                       Content="Handback Statistics:" Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                <DataGrid x:Name="DataGrid" Margin="20,25,20,5" FrozenColumnCount="1" AutoGenerateColumns="False" IsReadOnly="True"
                          ItemsSource="{Binding Statistics, IsAsync=True}">
                    <DataGridTextColumn Header="Query Name" Binding="{Binding Name}"/>
                    <DataGridTextColumn Header="Project" Binding="{Binding Project}"/>
                    <DataGridTextColumn Header="Gamearea" Binding="{Binding Folder}"/>
                    <DataGridTextColumn Header="Language" Binding="{Binding Language}"/>
                    <DataGridTextColumn Header="Errors" Binding="{Binding Errors}" SortDirection="Descending" FontWeight="{Binding Errors, Converter={StaticResource IntToFontWeight}}"/>
                    <DataGridTextColumn Header="Warnings" Binding="{Binding Warnings}" FontWeight="Bold"/>
                    <DataGridTextColumn Header="Not 7-Final" Binding="{Binding NotFinal}" FontWeight="Bold"/>
                    <DataGridTextColumn Header="Not Reviewed" Binding="{Binding ForReview}" FontWeight="Bold"/>
                        <!--<DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Text="{Binding Name}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander>
                                                    <Expander.Header>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Text="{Binding Name}"/>
                                                            <TextBlock Text="{Binding ItemCount}"/>
                                                            <TextBlock Text="Items"/>
                                                        </StackPanel>
                                                    </Expander.Header>
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </DataGrid.GroupStyle>-->
                </DataGrid>
            </Grid>
            <Rectangle Height="1" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
        </StackPanel>
    </Grid>
</Window>
